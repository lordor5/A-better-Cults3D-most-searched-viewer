---
import { scrapData, getNumberOfPages } from "../components/scraper.ts";
import { insertionSort } from "./orderDataset.ts";
import {
  getKeywords,
  populatePositions,
  OrderData,
  calculateAverage,
} from "./functions.ts";

interface Dataset {
  label: string;
  data: Array<number | null>;
  average: number;
  emptySlots: number;
  numberOfModels: number;
}

interface Props {
  average: number;
  emptySlots: number;
  top?: number;
}

const { average, emptySlots, top } = Astro.props;

const { data, monthYearArray } = await scrapData();

const keywords = getKeywords(data);

let positions = populatePositions(keywords, monthYearArray);

for (let i = 0; i < data.length; i++) {
  positions = OrderData(keywords, positions, data[i], i);
}

const labels = keywords;
const datas = positions;
let datasets: Array<Dataset> = [];
for (var i = 0; i < labels.length; i++) {
  datasets.push({
    label: labels[i],
    data: datas[i],
    average: 0,
    emptySlots: 0,
    numberOfModels: 0,
  });
}

//console.log(datasets.length);

for (let i = 0; i < datasets.length; i++) {
  datasets[i] = calculateAverage(datasets[i]);
}

//console.log(datasets);

// for (let i = 0; i < datasets.length; i++) {
//   console.log(datasets[i].label, datasets[i].average);
// }

datasets = insertionSort(datasets);

for (let i = 0; i < datasets.length; i++) {
  if (
    datasets[i].average > average ||
    datasets[i].emptySlots > emptySlots ||
    datasets[i].average < 1
  ) {
    datasets.splice(i, 1);
    i--;
  }
}

if (top) {
  datasets = datasets.splice(0, top);
}

// for (let i = 0; i < datasets.length; i++) {
//   datasets[i].numberOfModels = await getNumberOfPages(datasets[i].label);
// }

//console.log(datasets);
---

<div>
  <canvas id="myChart"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script is:inline define:vars={{ datasets, monthYearArray }}>
  document.addEventListener("DOMContentLoaded", function () {
    const ctx = document.getElementById("myChart").getContext("2d");

    new Chart(ctx, {
      type: "line",
      data: {
        labels: monthYearArray,
        datasets: datasets,
      },
    });
  });
</script>
<style>
  canvas {
    width: 100%;
    height: 100%;
  }
</style>
