---
import Layout from "../layouts/Layout.astro";
import puppeteer from "puppeteer";

const browser = await puppeteer.launch();
const page = await browser.newPage();

await page.goto("https://cults3d.com/es/pages/busquedas-de-tendencia");
await page.setViewport({ width: 1080, height: 1024 });

const data = await page.evaluate(() => {
  // Seleccionar todos los <ol> en la página.
  const orderedLists = document.querySelectorAll("ol");

  // Convertir NodeList en un array y mapear para obtener los textos de cada <li>.
  const listsArray = Array.from(orderedLists).map((ol) => {
    // Seleccionar todos los <li> dentro del <ol> y obtener sus textos.
    return Array.from(ol.querySelectorAll("li")).map(
      (li) => li.textContent?.trim() || ""
    );
  });

  return listsArray;
});

// Scrape the titles
const titles = await page.evaluate(() => {
  // Get all the title elements
  const titleElements = document.querySelectorAll("h1");
  const titlesArray: Array<string> = [];
  titleElements.forEach((title) => {
    titlesArray.push(title.innerText);
  });
  return titlesArray;
});

// Extract month and year from the titles
const monthYearArray = titles
  .map((title) => {
    // Match month and year
    const match = title.match(/- (\w+) (\d{4}) -/);
    if (match) {
      return match[1] + match[2];
    }
    return null;
  })
  .filter((item) => item !== null); // Filter out any null values

await browser.close();

// function refineData(data: Array<Array<string>>) {
//   let newData: Array<Array<string>> = [];
//   for (let i = 0; i < data.length; i++) {
//     for (let j = 0; j < data[i].length; j++) {
//       newData[i].push(data[i][j].toLowerCase());
//     }
//   }
// }

function getKeywords(data: Array<Array<string>>) {
  let keywords: Array<string> = [];
  for (let i = 0; i < data.length; i++) {
    //recorre los meses en busca de nuevas palabras
    for (let j = 0; j < data[i].length; j++) {
      //recorre los datos de cada mes
      let esta = false;
      for (let k = 0; k < keywords.length; k++) {
        //recorre las palabras en busca de coincidencias
        if (data[i][j].toLowerCase() === keywords[k]) {
          esta = true;
        }
      }
      //console.log(data[i][j].toLowerCase());
      if (!esta) {
        keywords.push(data[i][j].toLowerCase());
      }
    }
  }

  return keywords;
}

function populatePositions(keywords: Array<string>) {
  let position: Array<Array<number>> = [];

  for (let i = 0; i < keywords.length; i++) {
    position.push([]);
  }
  return position;
}

function OrderData(
  keywords: Array<string>,
  positions: Array<Array<number>>,
  data: Array<string>,
  mes: number
) {
  for (let i = 0; i < data.length; i++) {
    //Recorrer los datos
    for (let j = 0; j < positions.length; j++) {
      // recorrer las keywords
      if (data[i].toLowerCase() === keywords[j]) {
        //cuando los datos y la keyword coinciden, añadir en el mes la posición
        if (i + 1 < positions[j][mes] || positions[j][mes] === undefined) {
          positions[j][mes] = i + 1;
        }
      }
    }
  }
  return positions;
}

const keywords = getKeywords(data);
let positions = populatePositions(keywords);

for (let i = 0; i < data.length; i++) {
  positions = OrderData(keywords, positions, data[i], i);
}

const labels = keywords;
const datas = positions;
let datasets = [];
for (var i = 0; i < labels.length; i++) {
  datasets.push({ label: labels[i], data: datas[i] });
}

datasets = datasets.slice(0, 20);
---

<Layout title="Welcome to Astro.">
  <div>
    <canvas id="myChart"></canvas>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <script is:inline define:vars={{ datasets, monthYearArray }}>
    document.addEventListener("DOMContentLoaded", function () {
      const ctx = document.getElementById("myChart").getContext("2d");

      new Chart(ctx, {
        type: "line",
        data: {
          labels: monthYearArray,
          datasets: datasets,
        },
      });
    });
  </script>
</Layout>
<style>
  canvas {
    width: 100%;
    height: 100%;
  }
</style>
